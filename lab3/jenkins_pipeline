pipeline {
    agent any
    
    stages {
        stage('Cleanup Workspace') {
            steps {
                cleanWs()
            }
        }
        
        stage('Checkout') {
            steps {
                // Cloning a repository and switching to a docker branch
                checkout([$class: 'GitSCM',
                          branches: [[name: 'docker']],
                          doGenerateSubmoduleConfigurations: false,
                          extensions: [],
                          submoduleCfg: [],
                          userRemoteConfigs: [[url: 'https://github.com/vin-57/mlops_practice']]])
            }
        }
        
        stage('Build') {
            steps {
                // Project build
                sh 'python3 -m pip install -r lab3/requirements.txt'
                sh 'python3 lab3/data_creation.py'
                sh 'python3 lab3/data_preprocessing.py'
                sh 'python3 lab3/model_preparation.py'
                sh 'python3 lab3/model_testing.py'
            }
        }
        
        stage('Archive Artifacts') {
            steps {
                // Archiving Artifacts
                archiveArtifacts 'test/*.csv'
                archiveArtifacts 'train/*.csv'
                archiveArtifacts 'test_preprocessed/*.csv'
                archiveArtifacts 'train_preprocessed/*.csv'
                archiveArtifacts '*.pkl'
                sh 'mkdir -p lab3'
                sh 'rm -rf lab3/test lab3/train lab3/test_preprocessed lab3/train_preprocessed lab3/model.pkl'
                sh 'mv -f -t lab3 test train test_preprocessed train_preprocessed *.pkl'
            }
        }
        
        stage('Publish to GitHub') {
            steps {
                withCredentials([string(credentialsId: 'Jenkinstoken', variable: 'TOKEN')]) {
                    sh 'git config --global user.email "jenkins@example.com"'
                    sh 'git config --global user.name "Jenkins"'
                    sh 'git checkout docker'
                    sh 'git add .'
                    sh 'git commit -m "Jenkins Pipeline Build"'
                    sh "git remote set-url origin https://${TOKEN}@github.com/vin-57/mlops_practice.git"
                    sh 'git push origin docker'
                }
            }
        }
    }
}
